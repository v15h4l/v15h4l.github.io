{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","Game","handleSquareClick","activeHistoryIdx","state","history","slice","xIsNext","calculateWinner","push","setState","handleButtonClick","Array","fill","status","this","winner","map","element","idx","React","Component","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gOAIA,SAASA,EAAOC,GACZ,OACI,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,QAKnB,SAASC,EAAMJ,GAEX,IAAMK,EAAe,SAACC,GAClB,OAAO,cAACP,EAAD,CACHI,MAAOH,EAAMO,QAAQD,GACrBJ,QAAS,kBAAMF,EAAME,QAAQI,OAIrC,OACI,gCACI,sBAAKL,UAAU,YAAf,UACKI,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKJ,UAAU,YAAf,UACKI,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKJ,UAAU,YAAf,UACKI,EAAa,GACbA,EAAa,GACbA,EAAa,S,IAMxBG,E,kDACF,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAQVS,kBAAoB,SAACH,GACjB,IAAII,EAAmB,EAAKC,MAAMD,iBAC5BE,EAAU,EAAKD,MAAMC,QAAQC,MAAM,EAAGH,EAAmB,GACzDH,EAAUK,EAAQF,GAAkBH,QAAQM,QAC5CC,EAAUF,EAAQF,GAAkBI,QAEtCC,EAAgBR,IAAYA,EAAQD,KAGxCC,EAAQD,GAAKQ,EAAU,IAAM,IAE7BJ,IACAE,EAAQI,KAAK,CAAET,UAASO,SAAUA,IAClC,EAAKG,SAAS,CAAEL,UAASF,uBAtBV,EAyBnBQ,kBAAoB,SAACZ,GACjB,EAAKW,SAAS,CAAEP,iBAAkBJ,KAvBlC,EAAKK,MAAQ,CACTC,QAAS,CAAC,CAAEL,QAASY,MAAM,GAAGC,KAAK,MAAON,SAAS,IACnDJ,iBAAmB,GALR,E,qDA8BT,IAIFW,EAJC,SACWC,KAAKX,MAAMC,QAAQC,QACES,KAAKX,MAAMD,kBAAxCH,EAFH,EAEGA,QAASO,EAFZ,EAEYA,QAGXS,EAASR,EAAgBR,GAQ/B,OALIc,EADAE,EACS,YAAcA,EAEd,kBAAoBT,EAAU,IAAM,KAI7C,sBAAKb,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,CAAOG,QAASA,EAASL,QAASoB,KAAKb,sBAE3C,sBAAKR,UAAU,YAAf,UACI,qBAAKA,UAAU,SAAf,SAAyBoB,IACzB,6BAEQC,KAAKX,MAAMC,QAAQY,KAAI,SAACC,EAASC,GAC7B,OAAQ,6BACJ,wBAAQxB,QAAS,kBAAI,EAAKgB,kBAAkBQ,IAA5C,yBACcA,EAAM,EAAI,SAAWA,EAAM,iC,GAxD1DC,IAAMC,WAoEzB,SAASb,EAAgBR,GAWrB,IAVA,IAAMsB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFvB,EAAI,EAAGA,EAAIuB,EAAMC,OAAQxB,IAAK,CAAC,IAAD,cACjBuB,EAAMvB,GADW,GAC5ByB,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAI1B,EAAQwB,IAAMxB,EAAQwB,KAAOxB,EAAQyB,IAAMzB,EAAQwB,KAAOxB,EAAQ0B,GAClE,OAAO1B,EAAQwB,GAGvB,OAAO,KAKXG,IAASC,OACL,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.a9d787bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction Board(props) {\r\n\r\n    const renderSquare = (i) => {\r\n        return <Square\r\n            value={props.squares[i]}\r\n            onClick={() => props.onClick(i)}\r\n        />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            history: [{ squares: Array(9).fill(null), xIsNext: true }],\r\n            activeHistoryIdx : 0\r\n        };\r\n    }\r\n\r\n    handleSquareClick = (i) => {\r\n        let activeHistoryIdx = this.state.activeHistoryIdx;\r\n        const history = this.state.history.slice(0, activeHistoryIdx + 1);\r\n        const squares = history[activeHistoryIdx].squares.slice();\r\n        const xIsNext = history[activeHistoryIdx].xIsNext;\r\n\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = xIsNext ? \"X\" : \"O\";\r\n\r\n        activeHistoryIdx++;\r\n        history.push({ squares, xIsNext: !xIsNext });\r\n        this.setState({ history, activeHistoryIdx });\r\n    };\r\n\r\n    handleButtonClick = (i) => {\r\n        this.setState({ activeHistoryIdx: i });\r\n    };\r\n\r\n\r\n    render() {\r\n        const history = this.state.history.slice();\r\n        const { squares, xIsNext } = history[this.state.activeHistoryIdx];\r\n\r\n        let status;\r\n        const winner = calculateWinner(squares);\r\n\r\n        if (winner) {\r\n            status = \"Winner : \" + winner;\r\n        } else {\r\n            status = \"Next player : \" + (xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board squares={squares} onClick={this.handleSquareClick} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div className=\"status\">{status}</div>\r\n                    <ol>\r\n                        {\r\n                            this.state.history.map((element, idx) => {\r\n                                return (<li>\r\n                                    <button onClick={()=>this.handleButtonClick(idx)}>\r\n                                        {`Go to ${idx > 0 ? \"move #\" + idx : \"game start\"}`}\r\n                                    </button>\r\n                                </li>);\r\n                            })\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}